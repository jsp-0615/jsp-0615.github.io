<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>RNN</title>
      <link href="/knowledgeNotes/2025/04/16/RNN/"/>
      <url>/knowledgeNotes/2025/04/16/RNN/</url>
      
        <content type="html"><![CDATA[<h1 id="RNN"><a href="#RNN" class="headerlink" title="RNN"></a>RNN</h1><p>Recurrent Neural Network是一种具有循环结构的神经网络，能够处理序列数据，与传统的前馈神经网络不同，RNN通过将当前时刻的输出与前一时刻的状态（或叫做隐藏层）作为输入传递到下一个时刻，使得它能保留之前的信息并用于当前的决策</p><p><img src="D:\blog\source\images\1HgAY1lLMYSANqtgTgwWeXQ.png" alt="img"></p><p><strong>输入层</strong>：输入数据的每一时刻（如时间序列数据的每个时间步）都会传递到网络</p><p><strong>隐藏层</strong>：RNN的核心是循环结构，它将先前的隐藏状态与当前的输入结合，生成当前的隐藏状态。通常，RNN的隐藏层包含多个神经元，且它们的状态是由上一时刻的输出状态递归计算得来的。</p><p><strong>输出层</strong>：基于隐藏层的输出，生成预测结果。</p><p>假设我们有输入序列 $x_1,x_2,…,x_T$，RNN 每个时间步 t 会更新隐藏状态 $h_t$，基本公式如下：</p><p>$$h_t&#x3D;\tanh(W_{xh} x_t + W_{hh} h_{t-1} + b_h)$$</p><p>$$\hat y_t&#x3D;W_{hy}h_t+b_y $$</p><p>其中的参数有：</p><ul><li>$W_{xh}$：输入到隐藏层的权重（输入维度 → 隐藏维度）</li><li>$W_{hh}$：隐藏状态之间的权重（隐藏维度 → 隐藏维度）</li><li>$b_h$：隐藏层的偏置</li><li>$W_{hy}$：隐藏到输出的权重（隐藏维度 → 输出维度）</li><li>$b_y$：输出层偏置</li></ul><p>RNN的种类有以下这些：</p><p>one-to-one：简单预测</p><p>one-to-many：图像描述生成</p><p>many-to-one：分类问题，比如说：情感分析，给定一段话，输出这段话的情况是positive还是negative</p><p>第一个many-to-many：机器翻译，语言模型</p><p>第二个many-to-many：命名实体识别（NER），词性标注（POS Tagging）</p><p><img src="D:\blog\source\images\various_rnn.png" alt="various_rnn"></p><h2 id="反向传播"><a href="#反向传播" class="headerlink" title="反向传播"></a>反向传播</h2><p>RNN的反向传播(Backpropagation Through Time,BPTT)是它的核心部分，核心思路是展开时间维度做反向传播，由于RNN会在每个时间步共享参数，在做反向传播时要沿着时间轴展开整个网络</p><p>设loss为总损失: $L&#x3D;\sum_{t&#x3D;1}^TL_t&#x3D;\sum_{t&#x3D;1}^TCrossEntropy(y_t,\hat y_t)$</p><blockquote><p>这里算损失的时候对于每个时间步都去算了交叉熵，那这里每个时间步的true label到底是什么</p></blockquote><ul><li>情况一：每个时间步都要输出(多对多) 语言模型，机器翻译等任务，比如输入序列是x&#x3D;[“I”,”love”,”deep”,”learning”]那么目标输出（true label）：y&#x3D;[“love”,”deep”,”learning”,”!”] 那么对于每个时间步就有一个true label了</li><li>情况二：只有最后一个时间步需要输出（多对一）比如情感分析，输入一段话，最终只有一个结果，假设输入是x&#x3D;[“This”,”movie”,”is”,”great”] 整个序列的输出只有一个y&#x3D;”positive”，那么只在最后一步做交叉熵</li><li>情况三：同样是many-to-many，比如命名实体识别，词性标注，每个输入词都对应一个标签。输入句子： x&#x3D;[“Barack”,”Obama”,”was”,”born”]目标标签：y&#x3D;[“PER”,”PER”,”O”,”O”]每个时间步就有对应的真实标签。</li></ul><p><em>公式上进行了求和是因为我们假设的是 <strong>每个时间步都有输出、有标签</strong> 的任务，比如语言建模、机器翻译、时间序列预测等。如果是 <strong>只在最后一步才预测的任务</strong>，就不需要对每个时间步计算交叉熵，只计算最后一个时间步的损失就可以了。</em></p><p>对输出层的参数求导:</p><p>$\frac{\partial L}{\partial W_{hy}}&#x3D;\sum_{t&#x3D;1}^T\frac{\partial L_t }{\partial  \hat y_t}\cdot \frac{\partial \hat y_t}{\partial W_{hy}}$</p><p>根据上面对损失的分类讨论，这里的输出层的参数求导的求和也会根据上面的不同而不同，如上面每个时间步都有输出的语言模型，机器翻译，时间序列预测，就会有多个loss，所以就要对每个时间步求导，然后加总起来，形成最终的$W_{hy}$的梯度</p><p>对隐藏状态权重$W_{hh}$的梯度</p><p>$\frac{\partial L}{\partial W_{hh}} &#x3D; \sum_{t&#x3D;1}^{T} \sum_{k&#x3D;1}^{t}<br>\left(<br>\frac{\partial L_t}{\partial h_t} \cdot<br>\frac{\partial h_t}{\partial h_k} \cdot<br>\frac{\partial h_k}{\partial W_{hh}}<br>\right)$</p><p>看懂这个式子很重要！</p><p>它的含义是：</p><ul><li>当前的损失$L_t$ 不仅受到当前的隐藏状态 $h_t$ 影响</li><li>$h_t$ 又受到之前所有隐藏状态 $h_{t-1}, h_{t-2}, \dots$ 的影响</li><li>所以梯度要“<strong>沿着时间向前传递</strong>”</li></ul><p>由于 $W_{hh}$ 是 <strong>在所有时间步中共享的参数</strong>，所以它的总梯度是所有时间步对它的影响的 <strong>累加</strong>$\frac{\partial L}{\partial W_{hh}} &#x3D; \sum_{t&#x3D;1}^{T}\frac{\partial L_t}{\partial W_{hh}} $&#x3D;&#x3D;注：这里的求和也是 根据RNN的不同类型而做区别，只有多对多任务需要累加和，为了更通用，下面一律以多对多任务的情况进行最复杂的情况进行解释&#x3D;&#x3D;</p><p>关键在于$W_{hh}$ 这里的$L_t$​对他求导，为了看着方便我们将前向传播的式子抄下来：$$h_t&#x3D;\tanh(W_{xh} x_t + W_{hh} h_{t-1} + b_h)$$</p><p>$$\hat y_t&#x3D;W_{hy}h_t+b_y $$</p><p>根据链式法则$L_t&#x3D;CrossEntropy(\hat y_t,y_t)$ 所以根据链式法则， $\frac{\partial L_t}{\partial h_t}$ 然后$h_t$又是和$W_{hh}$是有关系了但要注意这里还有个$h_{t-1}$$W_{hh}$会间接受到多个时间步的影响，这一影响就是从头影响到结尾，所以对$W_{hh}$有了内层的求和，</p><p>同理对于$W_{xh}$的梯度更新：</p><p>对于每一个时间步都有</p><p>$\frac{\partial h_t}{\partial W_{xh}}&#x3D;(1−h_t^2)⋅x_t^⊤$&#x3D;&#x3D;注：这个求导结果是基于激活函数是tanh的情况下&#x3D;&#x3D;</p><p>然后对于每个时间步产生的loss的对他的梯度$\frac{\partial L_t}{\partial W_{xh}} &#x3D; \frac{\partial L_t}{\partial h_t} \cdot \frac{\partial h_t}{\partial W_{xh}} &#x3D; \delta_t \cdot x_t^\top$</p><p>其中$\delta_t &#x3D; \frac{\partial L_t}{\partial h_t} \odot (1 - h_t^2)$⊙ 表示按元素乘法（Hadamard product）。$\delta_t$来自输出层的梯度反传到$h_t$，</p><p>总梯度（因为$W_{xh}$在每个时间步也是共享的</p><p>$\frac{\partial L}{\partial W_{xh}} &#x3D; \sum_{t&#x3D;1}^{T} \delta_t \cdot x_t^\top$ &#x3D;&#x3D;每一项$\delta_t \cdot x_t^\top$都只和当前时间步$$x_t,h_t$$有关&#x3D;&#x3D;</p><p>自此一次反向传播，再梯度下降更新参数，一次反向传播就全部完成了</p><h2 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><h4 id="处理序列数据的天然优势"><a href="#处理序列数据的天然优势" class="headerlink" title="处理序列数据的天然优势"></a>处理序列数据的天然优势</h4><ul><li>RNN 最大的优点是<strong>可以处理变长序列输入</strong>，不像传统的全连接神经网络（MLP）只能处理固定维度的向量。</li><li>它能自动建模时间步之间的<strong>时序依赖关系（temporal dependency）</strong>，这是做 NLP 和时间序列任务的基础。</li></ul><h4 id="参数共享，模型紧凑"><a href="#参数共享，模型紧凑" class="headerlink" title="参数共享，模型紧凑"></a>参数共享，模型紧凑</h4><ul><li>RNN 在每个时间步<strong>共享相同的网络参数（权重）</strong>，不像深层 MLP 那样每一层都有一套参数。</li><li>这大大减少了模型的参数量，提升了<strong>泛化能力和训练效率</strong>。</li></ul><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><h4 id="梯度消失和梯度爆炸"><a href="#梯度消失和梯度爆炸" class="headerlink" title="梯度消失和梯度爆炸"></a>梯度消失和梯度爆炸</h4><p>在训练 RNN 时采用 <strong>反向传播通过时间（BPTT）</strong>，梯度要链式传播多个时间步。</p><p>如果时间步较多，梯度会连续相乘：</p><p>$\frac{\partial h_t}{\partial h_k} &#x3D; \prod_{i&#x3D;k+1}^{t} \frac{\partial h_i}{\partial h_{i-1}}$</p><ul><li>导数小于 1 → 梯度消失，模型学不到长期依赖；</li><li>导数大于 1 → 梯度爆炸，导致模型不稳定或发散。</li></ul><p>这是 RNN 最大的训练困难之一。</p><h4 id="难以捕捉长期依赖关系"><a href="#难以捕捉长期依赖关系" class="headerlink" title="难以捕捉长期依赖关系"></a>难以捕捉长期依赖关系</h4><ul><li>虽然理论上可以记住长期历史信息，但实际上 RNN 更擅长捕捉<strong>短期依赖</strong>。这里的本质原因还是梯度消失，反向传播的时候是相乘的，每乘一次梯度都会变小，长时间步乘下来就接近0即梯度消失，第二个就是RNN的结构只有一个隐藏状态$h_t$来记忆之前的信息，这个隐藏状态每一步都会被新的输入和权重洗掉，旧信息会被“覆盖”</li><li>长时间间隔的输入（如前文主语和后文动词）常常会被“遗忘”或削弱。</li><li>所以原始 RNN 不能很好地解决如语言建模中的“长句子”问题。</li></ul><h4 id="不能并行计算，训练效率低"><a href="#不能并行计算，训练效率低" class="headerlink" title="不能并行计算，训练效率低"></a>不能并行计算，训练效率低</h4><ul><li>RNN 是<strong>严格按时间步串行计算</strong>的：必须等 $h_{t-1}$ 算出来后，才能计算 $h_t$。</li><li>这使得 <strong>GPU 加速效果不明显，训练时间长</strong>，尤其在长序列任务中更为明显。</li><li>相比之下，Transformer 是完全并行的，效率更高。</li></ul>]]></content>
      
      
      <categories>
          
          <category> knowledgeNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL41 最长连续登录天数</title>
      <link href="/problemNotes/2025/04/15/SQL41/"/>
      <url>/problemNotes/2025/04/15/SQL41/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL41-最长连续登录天数"><a href="#SQL41-最长连续登录天数" class="headerlink" title="SQL41 最长连续登录天数"></a>SQL41 最长连续登录天数</h1><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>你正在搭建一个用户活跃度的画像，其中一个与活跃度相关的特征是“最长连续登录天数”， 请用SQL实现“2023年1月1日-2023年1月31日用户最长的连续登录天数”</p><p>登陆表 <strong>tb_dau：</strong></p><table><thead><tr><th>fdate</th><th>user_id</th></tr></thead><tbody><tr><td>2023-01-01</td><td>10000</td></tr><tr><td>2023-01-02</td><td>10000</td></tr><tr><td>2023-01-04</td><td>10000</td></tr></tbody></table><p>输出：</p><table><thead><tr><th>user_id</th><th>max_consec_days</th></tr></thead><tbody><tr><td>10000</td><td>2</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> tb_dau;</span><br><span class="line"><span class="keyword">create table</span> `tb_dau` (</span><br><span class="line">    `fdate` <span class="type">date</span>,</span><br><span class="line">    `user_id` <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert into</span> tb_dau(fdate, user_id)</span><br><span class="line"><span class="keyword">values</span> </span><br><span class="line">(<span class="string">&#x27;2023-01-01&#x27;</span>, <span class="number">10000</span>),</span><br><span class="line">(<span class="string">&#x27;2023-01-02&#x27;</span>, <span class="number">10000</span>),</span><br><span class="line">(<span class="string">&#x27;2023-01-04&#x27;</span>, <span class="number">10000</span>);</span><br><span class="line">user_id<span class="operator">|</span>max_consec_days</span><br><span class="line"><span class="number">10000</span><span class="operator">|</span><span class="number">2</span></span><br></pre></td></tr></table></figure><blockquote><p>MySQL中日期加减的函数<br>日期增加 DATE_ADD，例：date_add(‘2023-01-01’, interval 1 day) 输出 ‘2023-01-02’<br>日期减少 DATE_SUB，例：date_sub(‘2023-01-01’, interval 1 day) 输出 ‘2022-12-31’<br>日期差 DATEDIFF，例：datediff(‘2023-02-01’, ‘2023-01-01’) 输出31</p></blockquote><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2>]]></content>
      
      
      <categories>
          
          <category> problemNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>因果推断</title>
      <link href="/knowledgeNotes/2025/04/14/causal-inference/"/>
      <url>/knowledgeNotes/2025/04/14/causal-inference/</url>
      
        <content type="html"><![CDATA[<h1 id="因果推断"><a href="#因果推断" class="headerlink" title="因果推断"></a>因果推断</h1><h2 id="因果阶梯："><a href="#因果阶梯：" class="headerlink" title="因果阶梯："></a>因果阶梯：</h2><ol><li>Association P(y|X)</li><li>how seeing X</li></ol><h2 id="Simpson’s-Paradox-辛普森悖论"><a href="#Simpson’s-Paradox-辛普森悖论" class="headerlink" title="Simpson’s Paradox(辛普森悖论)"></a>Simpson’s Paradox(辛普森悖论)</h2><p>揭示了<strong>聚合数据</strong>和<strong>分组数据</strong>之间可能存在方向相反的结论</p><p>当对不同子组分别进行分析时，一个趋势是存在的，但当将这些子组数据<strong>合并</strong>后，趋势可能<strong>消失或反转</strong>。</p><p>产生的原因： 人群分布在混淆变量上不一致，导致相关关系完全可以被扭曲</p><p>解决的方式：取决于因果图，forks的话要分层，collider的话就不要分层</p><h3 id="Ex1-：UC-Berkeley-gender-bias"><a href="#Ex1-：UC-Berkeley-gender-bias" class="headerlink" title="Ex1 ：UC Berkeley gender bias."></a>Ex1 ：UC Berkeley gender bias.</h3><p>Graduate admissions to UC Berkeley(Fall 1973)</p><p>​University-level Data</p><table><thead><tr><th></th><th>Men</th><th></th><th>Women</th><th></th></tr></thead><tbody><tr><td></td><td>Applicants</td><td>Admitted</td><td>Applicants</td><td>Admitted</td></tr><tr><td>Total</td><td>8442</td><td>44%</td><td>4321</td><td>35%</td></tr></tbody></table><p>-&gt;  University-level data shows bias in favor of men</p><p>​Department level Data</p><table><thead><tr><th>Department</th><th>MEN</th><th></th><th>women</th><th></th></tr></thead><tbody><tr><td></td><td>Applicants</td><td>Admitted</td><td>Applicants</td><td>Admitted</td></tr><tr><td>A</td><td>825</td><td>62%</td><td>108</td><td>82%</td></tr><tr><td>B</td><td>560</td><td>63%</td><td>25</td><td>68%</td></tr><tr><td>C</td><td>325</td><td>37%</td><td>593</td><td>34%</td></tr><tr><td>D</td><td>417</td><td>33%</td><td>375</td><td>35%</td></tr><tr><td>E</td><td>191</td><td>28%</td><td>393</td><td>24%</td></tr><tr><td>F</td><td>373</td><td>6%</td><td>341</td><td>7%</td></tr></tbody></table><p>-&gt;  Department-level data shows bias in favor of women</p><h3 id="Ex2-Treatment-Effect"><a href="#Ex2-Treatment-Effect" class="headerlink" title="Ex2: Treatment Effect"></a>Ex2: Treatment Effect</h3><p>-&gt; Subpopulation data:</p><p>​Men</p><table><thead><tr><th></th><th>Not recovered</th><th>recovered</th><th>TOTAL</th></tr></thead><tbody><tr><td>Treat</td><td>6</td><td>81</td><td>87</td></tr><tr><td>No Treat</td><td>36</td><td>234</td><td>270</td></tr></tbody></table><p>P(Recovered|Treat)&#x3D;81&#x2F;87&#x3D;0.93  ①</p><p>P(Recovered|No Treat)&#x3D;234&#x2F;270&#x3D;0.87 ②</p><p>​Women</p><table><thead><tr><th></th><th>Not recovered</th><th>recovered</th><th>TOTAL</th></tr></thead><tbody><tr><td>Treat</td><td>71</td><td>192</td><td>263</td></tr><tr><td>No Treat</td><td>25</td><td>55</td><td>80</td></tr></tbody></table><p>P(Recovered|Treat)&#x3D;192&#x2F;263&#x3D;0.73  ③</p><p>P(Recovered|No Treat)&#x3D;55&#x2F;80&#x3D;0.69 ④</p><p>-&gt;Population Data:</p><table><thead><tr><th></th><th>Not recovered</th><th>recovered</th><th>TOTAL</th></tr></thead><tbody><tr><td>Treat</td><td>77</td><td>273</td><td>350</td></tr><tr><td>No Treat</td><td>61</td><td>289</td><td>350</td></tr></tbody></table><p>P(Recovered|Treat)&#x3D;273&#x2F;350&#x3D;0.78 A</p><p>P(Recovered|No Treat)&#x3D;289&#x2F;350&#x3D;0.83 B</p><p>what we observe is on the population data -&gt; A&lt;B</p><p>but on the subpopulation data -&gt; Men ①&gt;②; Women ③&gt;④</p><p>paradox: The data says if the gender is known, we consider that treatment has effect, but if the gender is unknown, the treatment doesn’t work.</p><table><thead><tr><th></th><th>X</th><th>Y</th><th>Z</th></tr></thead><tbody><tr><td>0</td><td>women</td><td>Not Recovered</td><td>No Treat</td></tr><tr><td>1</td><td>men</td><td>Recovered</td><td>Treat</td></tr></tbody></table><p>subpopulation data:</p><table><thead><tr><th>Men(X&#x3D;1)</th><th></th><th>eSTIMATE PROBABILITY</th><th></th></tr></thead><tbody><tr><td>Treat(Z&#x3D;1)</td><td>P(Y&#x3D;1|X&#x3D;1,Z&#x3D;1)&#x3D;0.93</td><td>①</td><td></td></tr><tr><td>NOT Treat(Z&#x3D;0)</td><td>P(Y&#x3D;1|X&#x3D;1,Z&#x3D;0)&#x3D;0.87</td><td>②</td><td></td></tr></tbody></table><table><thead><tr><th>WOMEN(X&#x3D;0)</th><th></th><th>eSTIMATE PROBABILITY</th><th></th></tr></thead><tbody><tr><td>Treat(Z&#x3D;1)</td><td>P(Y&#x3D;1|X&#x3D;0,Z&#x3D;1)&#x3D;0.73</td><td>③</td><td></td></tr><tr><td>NOT Treat(Z&#x3D;0)</td><td>P(Y&#x3D;1|X&#x3D;0,Z&#x3D;0)&#x3D;0.69</td><td>④</td><td></td></tr></tbody></table><table><thead><tr><th></th><th></th><th>eSTIMATE PROBABILITY</th><th></th></tr></thead><tbody><tr><td>Treat(Z&#x3D;1)</td><td>P(Y&#x3D;1|Z&#x3D;1)&#x3D;0.78</td><td>A</td><td></td></tr><tr><td>NOT Treat(Z&#x3D;0)</td><td>P(Y&#x3D;1|Z&#x3D;0)&#x3D;0.83</td><td>B</td><td></td></tr></tbody></table><p>P(Y&#x3D;1|Z&#x3D;1)&#x3D;P(Y&#x3D;1|X&#x3D;1,Z&#x3D;1)P(X&#x3D;1|Z&#x3D;1)+P(Y&#x3D;1|X&#x3D;0,Z&#x3D;1)P(X&#x3D;0|Z&#x3D;1)</p><p>P(Y&#x3D;1|Z&#x3D;0)&#x3D;P(Y&#x3D;1|X&#x3D;1,Z&#x3D;0)P(X&#x3D;1|Z&#x3D;0)+P(Y&#x3D;1|X&#x3D;0,Z&#x3D;0)P(X&#x3D;0|Z&#x3D;0)</p><p>令P(X&#x3D;1|Z&#x3D;1) 为q 则P(X&#x3D;0|Z&#x3D;1)为(1-q) $q\in(0,1)$</p><p>令P(X&#x3D;1|Z&#x3D;0) 为$q’$ 则P(X&#x3D;0|Z&#x3D;0)为(1-q’) $q’\in(0,1)$</p><p>则 A&#x3D;①q+③(1-q) $q\in(0,1)$</p><p>B&#x3D;②q’+④(1-q’) $q’\in(0,1)$</p><p>要使结果出现A&lt;B的情况：</p><ol><li><p>(1-q)的值大导致A的值趋向于③，是比①小的，从而导致了一个较小的A，同时(1-q)&#x3D;P(X&#x3D;0|Z&#x3D;1)是个条件概率是讲治疗的人里面女性的概率，它大说明大多数的治疗的人是女性</p></li><li><p>同时①&lt;③，即女性无论治疗不治疗恢复都要比男性差</p></li></ol><p>同时满足这两个条件才可能出现反转的效果，即性别即会影响是否去治疗，同时也影响恢复情况</p><img src="causal-inference/image-20250414231146818.png"><h3 id="Ex3："><a href="#Ex3：" class="headerlink" title="Ex3："></a>Ex3：</h3><p>给1500人用TreatmentA，550人用B看致死率，但本身病人的情况有轻重之分</p> <img src="causal-inference/CI_basic_1.png"><p>现象：subpopulation之后结论是B致死率更高，但是total的时候是A更好</p><p>造成的原因是unequal weighting：重症的人得到了更多得B，导致B看起来效果不好了⇒总体得结论是一个有偏的加权平均</p><ul><li>Treatment A的致死率计算里面，轻症的致死率全重大，所以致死率小</li><li>Treatment B的致死率计算里面，重症的致死率全重大，所以致死率大</li></ul><p>正确的解释：Either treatment A or treatment B could be the right answer, depending on 数据的因果结构!</p><ul><li>condition is a cause of the treatment</li></ul><div style="display: flex; justify-content: center; gap: 20px;">  <img src="causal-inference/CI_basic_2.png" style="max-width: 45%;">  <img src="causal-inference/CI_basic_3.png" style="max-width: 45%;"></div><p>​比如医生把B专门用在重症，轻症的给A就行</p><p>​选择：这种情况要选B，看（subpopulation的结论，因为我们B中的高致死率知识因为本身就有很高的致死率里面有很多的重症</p><ul><li>treatment is a cause of the condition</li></ul><div style="display: flex; justify-content: center; gap: 20px;">  <img src="causal-inference/CI_basic_4.png" style="max-width: 45%;">  <img src="causal-inference/CI_basic_5.png" style="max-width: 45%;"></div><ul><li>解释：比如如果Treatment B，必须要等很久才能take，所以在等的时候condition会worsen——变成了重症！从而导致了更多的重症被接受了Treatment B. Treatment A不用等所以马上就轻症了！这就是为什么A的轻症占比更高</li><li>选择：这种情况要选A（看total的结论），因为Treatment本身是造成worse condition的原因，从而导致了Y。所以我们需要考虑T对C的影响而不能直接看conditional的结论（因为T会让你去不同的C！）</li></ul><p>考虑这个影响的办法就是直接看T对Y的总体效果。</p><p>结论：conclusion取决于causal structure</p><h2 id="统计基础知识点"><a href="#统计基础知识点" class="headerlink" title="统计基础知识点"></a>统计基础知识点</h2><p>Independence: P(A∩B)&#x3D;P(A)⋅P(B)</p><p>P(A|B) &#x3D; P(A) 即当A与B独立，则已知B发生A发生的概率就是A本身发生的概率，他们的发生不会互相影响</p><p>condition independence: P(A|B,C)&#x3D;P(A|C)</p>]]></content>
      
      
      <categories>
          
          <category> knowledgeNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A/B Test</title>
      <link href="/knowledgeNotes/2025/04/14/A-B-test/"/>
      <url>/knowledgeNotes/2025/04/14/A-B-test/</url>
      
        <content type="html"><![CDATA[<h1 id="A-B-testing"><a href="#A-B-testing" class="headerlink" title="A&#x2F;B testing"></a>A&#x2F;B testing</h1><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> knowledgeNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL44 查询连续入住多晚的客户信息？</title>
      <link href="/problemNotes/2025/04/12/SQL44/"/>
      <url>/problemNotes/2025/04/12/SQL44/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL44查询连续入住多晚的客户信息？"><a href="#SQL44查询连续入住多晚的客户信息？" class="headerlink" title="SQL44查询连续入住多晚的客户信息？"></a>SQL44查询连续入住多晚的客户信息？</h1><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>某酒店客房信息数据及某晚入住信息数据如下：</p><p>客房信息表<strong>guestroom_tb</strong>(room_id-房间号,room_type-房间类型,room_price-房间价格)，如下所示：</p><table><thead><tr><th>room_id</th><th>room_type</th><th>room_price</th></tr></thead><tbody><tr><td>1001</td><td>商务标准房</td><td>165</td></tr><tr><td>1002</td><td>家庭套房</td><td>376</td></tr><tr><td>1003</td><td>商务单人房</td><td>100</td></tr><tr><td>1004</td><td>商务单人房</td><td>100</td></tr><tr><td>1005</td><td>商务标准房</td><td>165</td></tr><tr><td>1006</td><td>商务单人房</td><td>100</td></tr><tr><td>1007</td><td>商务标准房</td><td>165</td></tr><tr><td>1008</td><td>家庭套房</td><td>365</td></tr><tr><td>1009</td><td>商务标准房</td><td>165</td></tr></tbody></table><p>入住信息表<strong>checkin_tb</strong>(info_id-信息id.room_id-房间号,user_id-客户id,checkin_time-入住时间,checkout_time-退房时间)，</p><p>该表存储该晚客户入住信息及后续退房信息，如下所示：</p><table><thead><tr><th>info_id</th><th>room_id</th><th>user_id</th><th>checkin_time</th><th>checkout_time</th></tr></thead><tbody><tr><td>1</td><td>1001</td><td>201</td><td>2022-06-12 15:00:00</td><td>2022-06-13 09:00:00</td></tr><tr><td>2</td><td>1001</td><td>202</td><td>2022-06-12 15:00:00</td><td>2022-06-13 09:00:00</td></tr><tr><td>3</td><td>1003</td><td>203</td><td>2022-06-12 14:00:00</td><td>2022-06-14 08:00:00</td></tr><tr><td>4</td><td>1004</td><td>204</td><td>2022-06-12 15:00:00</td><td>2022-06-13 11:00:00</td></tr><tr><td>5</td><td>1007</td><td>205</td><td>2022-06-12 16:00:00</td><td>2022-06-15 12:00:00</td></tr><tr><td>6</td><td>1008</td><td>206</td><td>2022-06-12 19:00:00</td><td>2022-06-13 12:00:00</td></tr><tr><td>7</td><td>1008</td><td>207</td><td>2022-06-12 19:00:00</td><td>2022-06-13 12:00:00</td></tr><tr><td>8</td><td>1009</td><td>208</td><td>2022-06-12 20:00:00</td><td>2022-06-16 09:00:00</td></tr></tbody></table><p>问题：请查询该酒店从6月12日开始连续入住多晚的客户信息？</p><p>要求输出：客户id、房间号、房间类型、连续入住天数（按照连续入住天数的升序排序，再按照房间号的升序排序，再按照客户id的降序排序）</p><p>示例数据结果如下：</p><table><thead><tr><th>user_id</th><th>room_id</th><th>room_type</th><th>days</th></tr></thead><tbody><tr><td>203</td><td>1003</td><td>商务单人房</td><td>2</td></tr><tr><td>205</td><td>1007</td><td>商务标准房</td><td>3</td></tr><tr><td>208</td><td>1009</td><td>商务标准房</td><td>4</td></tr></tbody></table><p>解释：以客户203为例，在2022-06-12入住酒店，在2022-06-14退房，连续在12日晚、13日晚入住在该酒店，故结果如上；其他结果同理。</p><p>示例输入：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span>  `guestroom_tb` ; </span><br><span class="line"><span class="keyword">CREATE TABLE</span> `guestroom_tb` (</span><br><span class="line">`room_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">`room_type` <span class="type">varchar</span>(<span class="number">16</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">`room_price` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line"><span class="keyword">PRIMARY KEY</span> (`room_id`));</span><br><span class="line"><span class="keyword">INSERT INTO</span> guestroom_tb <span class="keyword">VALUES</span>(<span class="number">1001</span>,<span class="string">&#x27;商务标准房&#x27;</span>,<span class="number">165</span>); </span><br><span class="line"><span class="keyword">INSERT INTO</span> guestroom_tb <span class="keyword">VALUES</span>(<span class="number">1002</span>,<span class="string">&#x27;家庭套房&#x27;</span>,<span class="number">376</span>); </span><br><span class="line"><span class="keyword">INSERT INTO</span> guestroom_tb <span class="keyword">VALUES</span>(<span class="number">1003</span>,<span class="string">&#x27;商务单人房&#x27;</span>,<span class="number">100</span>); </span><br><span class="line"><span class="keyword">INSERT INTO</span> guestroom_tb <span class="keyword">VALUES</span>(<span class="number">1004</span>,<span class="string">&#x27;商务单人房&#x27;</span>,<span class="number">100</span>); </span><br><span class="line"><span class="keyword">INSERT INTO</span> guestroom_tb <span class="keyword">VALUES</span>(<span class="number">1005</span>,<span class="string">&#x27;商务标准房&#x27;</span>,<span class="number">165</span>); </span><br><span class="line"><span class="keyword">INSERT INTO</span> guestroom_tb <span class="keyword">VALUES</span>(<span class="number">1006</span>,<span class="string">&#x27;商务单人房&#x27;</span>,<span class="number">100</span>); </span><br><span class="line"><span class="keyword">INSERT INTO</span> guestroom_tb <span class="keyword">VALUES</span>(<span class="number">1007</span>,<span class="string">&#x27;商务标准房&#x27;</span>,<span class="number">165</span>); </span><br><span class="line"><span class="keyword">INSERT INTO</span> guestroom_tb <span class="keyword">VALUES</span>(<span class="number">1008</span>,<span class="string">&#x27;家庭套房&#x27;</span>,<span class="number">365</span>); </span><br><span class="line"><span class="keyword">INSERT INTO</span> guestroom_tb <span class="keyword">VALUES</span>(<span class="number">1009</span>,<span class="string">&#x27;商务标准房&#x27;</span>,<span class="number">165</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span>  `checkin_tb` ; </span><br><span class="line"><span class="keyword">CREATE TABLE</span> `checkin_tb` (</span><br><span class="line">`info_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">`room_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">`user_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">`checkin_time` datetime <span class="keyword">NOT NULL</span>,</span><br><span class="line">`checkout_time` datetime <span class="keyword">NOT NULL</span>,</span><br><span class="line"><span class="keyword">PRIMARY KEY</span> (`info_id`));</span><br><span class="line"><span class="keyword">INSERT INTO</span> checkin_tb <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="number">1001</span>,<span class="number">201</span>,<span class="string">&#x27;2022-06-12 15:00:00&#x27;</span>,<span class="string">&#x27;2022-06-13 09:00:00&#x27;</span>); </span><br><span class="line"><span class="keyword">INSERT INTO</span> checkin_tb <span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="number">1001</span>,<span class="number">202</span>,<span class="string">&#x27;2022-06-12 15:00:00&#x27;</span>,<span class="string">&#x27;2022-06-13 09:00:00&#x27;</span>); </span><br><span class="line"><span class="keyword">INSERT INTO</span> checkin_tb <span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="number">1003</span>,<span class="number">203</span>,<span class="string">&#x27;2022-06-12 14:00:00&#x27;</span>,<span class="string">&#x27;2022-06-14 08:00:00&#x27;</span>); </span><br><span class="line"><span class="keyword">INSERT INTO</span> checkin_tb <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="number">1004</span>,<span class="number">204</span>,<span class="string">&#x27;2022-06-12 15:00:00&#x27;</span>,<span class="string">&#x27;2022-06-13 11:00:00&#x27;</span>); </span><br><span class="line"><span class="keyword">INSERT INTO</span> checkin_tb <span class="keyword">VALUES</span>(<span class="number">5</span>,<span class="number">1007</span>,<span class="number">205</span>,<span class="string">&#x27;2022-06-12 16:00:00&#x27;</span>,<span class="string">&#x27;2022-06-15 12:00:00&#x27;</span>); </span><br><span class="line"><span class="keyword">INSERT INTO</span> checkin_tb <span class="keyword">VALUES</span>(<span class="number">6</span>,<span class="number">1008</span>,<span class="number">206</span>,<span class="string">&#x27;2022-06-12 19:00:00&#x27;</span>,<span class="string">&#x27;2022-06-13 12:00:00&#x27;</span>); </span><br><span class="line"><span class="keyword">INSERT INTO</span> checkin_tb <span class="keyword">VALUES</span>(<span class="number">7</span>,<span class="number">1008</span>,<span class="number">207</span>,<span class="string">&#x27;2022-06-12 19:00:00&#x27;</span>,<span class="string">&#x27;2022-06-13 12:00:00&#x27;</span>); </span><br><span class="line"><span class="keyword">INSERT INTO</span> checkin_tb <span class="keyword">VALUES</span>(<span class="number">8</span>,<span class="number">1009</span>,<span class="number">208</span>,<span class="string">&#x27;2022-06-12 20:00:00&#x27;</span>,<span class="string">&#x27;2022-06-16 09:00:00&#x27;</span>);</span><br></pre></td></tr></table></figure><p>答案</p><p>这道题对我的难点在于，在group by的时候，想要输出哪些列group by的时候就要写哪些，我这里用group by是因为我怕同一个顾客有多次入住记录，比如用户201他在6月12日有过入住记录，如果它6月15号还有入住记录，这时候就需要有区别。</p><p><code>DATE(ct.checkin_time) = &#39;2022-06-12&#39;</code>：选择在2022年6月12日入住的记录。<code>DATEDIFF(ct.checkout_time, ct.checkin_time) &gt;= 2</code>：选择连续入住至少两晚的记录（注意不要在where直接使用days&gt;&#x3D; 2）。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">    user_id,</span><br><span class="line">    g.room_id,</span><br><span class="line">    room_type,</span><br><span class="line">    <span class="keyword">day</span> (checkout_time) <span class="operator">-</span> <span class="keyword">day</span> (checkin_time) <span class="keyword">as</span> days</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">    (</span><br><span class="line">        <span class="keyword">select</span></span><br><span class="line">            user_id,</span><br><span class="line">            c.room_id,</span><br><span class="line">            checkin_time,</span><br><span class="line">            checkout_time</span><br><span class="line">        <span class="keyword">from</span></span><br><span class="line">            checkin_tb <span class="keyword">as</span> c</span><br><span class="line">        <span class="keyword">group</span> <span class="keyword">by</span></span><br><span class="line">            user_id,</span><br><span class="line">            c.room_id,</span><br><span class="line">            checkin_time,</span><br><span class="line">            checkout_time</span><br><span class="line">    ) temp</span><br><span class="line">    <span class="keyword">inner</span> <span class="keyword">join</span> guestroom_tb <span class="keyword">as</span> g <span class="keyword">on</span> g.room_id <span class="operator">=</span> temp.room_id</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">    <span class="type">DATE</span> (temp.checkin_time) <span class="operator">&gt;=</span> <span class="string">&#x27;2022-06-12&#x27;</span></span><br><span class="line">    <span class="keyword">and</span> <span class="keyword">day</span> (checkout_time) <span class="operator">-</span> <span class="keyword">day</span> (checkin_time) <span class="operator">&gt;</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span></span><br><span class="line">    days,</span><br><span class="line">    g.room_id,</span><br><span class="line">    user_id <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><p>题解代码</p><p>注意使用DATEDIFF函数，然后where语句不能直接使用days来做判断条件，但是我觉得题解这里没有解决同一个顾客如果有多条记录的情况怎么解决</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    ct.user_id,</span><br><span class="line">    ct.room_id,</span><br><span class="line">    gt.room_type,</span><br><span class="line">    DATEDIFF(ct.checkout_time, ct.checkin_time) <span class="keyword">AS</span> days</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    checkin_tb ct</span><br><span class="line"><span class="keyword">JOIN</span> </span><br><span class="line">    guestroom_tb gt <span class="keyword">ON</span> gt.room_id <span class="operator">=</span> ct.room_id</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">   <span class="type">DATE</span>(ct.checkin_time) <span class="operator">=</span> <span class="string">&#x27;2022-06-12&#x27;</span> <span class="keyword">AND</span> DATEDIFF(ct.checkout_time, ct.checkin_time) <span class="operator">&gt;=</span> <span class="number">2</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">    days <span class="keyword">ASC</span>, ct.room_id <span class="keyword">ASC</span>, ct.user_id <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> problemNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The First Blog</title>
      <link href="/knowledgeNotes/2025/04/12/my-first-blog/"/>
      <url>/knowledgeNotes/2025/04/12/my-first-blog/</url>
      
        <content type="html"><![CDATA[<h1 id="The-first-blog"><a href="#The-first-blog" class="headerlink" title="The first blog"></a>The first blog</h1><p>时间开始于2025&#x2F;4&#x2F;12，周六，晚上20:45，终于千难万险将所有前期准备弄完了！接下来我会定期将自己的学习笔记跟新在这里，一方面督促自己努力学习，同时将脑中知识整理成可以发布出去的版本！</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>嗯。。。简单介绍一下自己，我是一名悉大的学生Jasper，正在学习Data Science，但目前的就业情况呢，导致我这种学历的人呢，上不上，下不下的，所以我想以博客的形式督促增加自己的技能点，点亮所有必要的知识点，目前呢自己的状态就是啥都会一点，但是啥都不是那么会，包括最基础的Python&#x2F;SQL&#x2F;R，Machine Learning，Deep Learning，作为一个计算机科班出生的，Java自然也不在话下，算法嘛会点，但绝对不多，大数据框架Hadoop好像是学完了，但好像又没有，Hive，Spark现在还在学习中</p><p>最后用看到张一鸣说过的一句话来结尾</p><p>做正确的事才是务实，短期投机不是务实。大力出奇迹事务实，刨根问底是务实，抓住本之是务实，尊重用户是务实，认识世界的多样性是务实。</p>]]></content>
      
      
      <categories>
          
          <category> knowledgeNotes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notes </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
